
# Base aliases

alias ls="ls --color=auto"
alias grep="grep --color=auto"
alias free="free -mt"
alias space="du -S | sort -n -r |more"
alias rm="rm -vi"
alias du="du -kh"       # Makes a more readable output.
alias df="df -Tha --total"
alias ps="ps auxf"
alias mkdir="mkdir -pv"
alias reload="source ~/.bashrc"
alias update="sudo dnf update"

# Make multiple shells share the same history file

export HISTSIZE=1000            # bash history will save N commands
export HISTFILESIZE=${HISTSIZE} # bash will remember N commands
export HISTCONTROL=ignoreboth   # ingore duplicates and spaces
export HISTIGNORE='&:ls:ll:la:cd:exit:clear:history'

# Append to the history file, don't overwrite it
shopt -s histappend

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# Makes man more readable

export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

# Functions

function extract {
    if [ -z "$1" ]; then
	# display usage if no parameters given
	echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
    else
	if [ -f $1 ] ; then
	    # NAME=${1%.*}
	    # mkdir $NAME && cd $NAME
	    case $1 in
		*.tar.bz2)   tar xvjf ../$1    ;;
		*.tar.gz)    tar xvzf ../$1    ;;
		*.tar.xz)    tar xvJf ../$1    ;;
		*.lzma)      unlzma ../$1      ;;
		*.bz2)       bunzip2 ../$1     ;;
		*.rar)       unrar x -ad ../$1 ;;
		*.gz)        gunzip ../$1      ;;
		*.tar)       tar xvf ../$1     ;;
		*.tbz2)      tar xvjf ../$1    ;;
		*.tgz)       tar xvzf ../$1    ;;
		*.zip)       unzip ../$1       ;;
		*.Z)         uncompress ../$1  ;;
		*.7z)        7z x ../$1        ;;
		*.xz)        unxz ../$1        ;;
		*.exe)       cabextract ../$1  ;;
		*)           echo "extract: '$1' - unknown archive method" ;;
	    esac
	else
	    echo "$1 - file does not exist"
	fi
    fi
}