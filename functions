#!/usr/bin/env bash

#
# Options
#

#shopt -s globstar

#
# Variables
#

target_dir=${HOME}
distro=$(lsb_release -si)
release=$(lsb_release -sr)
marker="~GENERATED BY DOTFILES SETUP~"

#
# Functions
#

#
# Simple ask function
# Source http://djm.me/ask
#
ask() {

    while true; do

        if [ "${2:-}" = "Y" ]; then
            prompt="Y/n"
            default=Y
        elif [ "${2:-}" = "N" ]; then
            prompt="y/N"
            default=N
        else
            prompt="y/n"
            default=
        fi

        # Ask the question - use /dev/tty in case stdin is redirected from somewhere else
        read -p "$1 [$prompt] " REPLY </dev/tty

        # Default?
        if [ -z "$REPLY" ]; then
            REPLY=$default
        fi

        # Check if the reply is valid
        case "$REPLY" in
            Y*|y*) return 0 ;;
            N*|n*) return 1 ;;
        esac

    done
}

#
# * Checks if ".profile" file exists, creates it if doesn't
# * Checks that special command string to include custom 
#   ".profile-*" files exists, adds it if doesn't
#
checkProfile() {
    if [ ! -f ${target_dir}/.profile ]; then
        touch ${target_dir}/.profile
    fi

    if ! grep -q "${marker}" "${target_dir}/.profile" ; then
    cat <<-EOF >> ${target_dir}/.profile
	
	# DO NOT REMOVE THIS LINE. ${marker}
	for file in ${target_dir}/.profile.d/.profile-* ; do
	. \$file
	done
	
	EOF
    fi
}

#
# * Checks if ".bash_profile" file exists, creates it if doesn't
# * Checks that special command string to include custom 
#   ".bash_profile-*" files exists, adds it if doesn't
#
checkBashProfile() {
    if [ ! -f ${target_dir}/.bash_profile ]; then
        touch ${target_dir}/.bash_profile
    fi

    if ! grep -q "${marker}" "${target_dir}/.bash_profile" ; then
    cat <<-EOF >> ${target_dir}/.bash_profile
	
	# DO NOT REMOVE THIS LINE. ${marker}
	for file in ${target_dir}/.bash_profile.d/.bash_profile-* ; do
	. \$file
	done
	
	EOF
    fi
}

#
# * Checks if ".Xresources" file exists, creates it if doesn't
# * Checks that special command string to include custom 
#   ".Xresources.d/*" files exists, adds it if doesn't
#
checkXresources() {
    if [ ! -f ${target_dir}/.Xresources ]; then
        touch ${target_dir}/.Xresources
    fi

    if ! grep -q "${marker}" "${target_dir}/.Xresources" ; then

	# Adding marker
	cat <<-EOF >> ${target_dir}/.Xresources
	! DO NOT REMOVE THIS LINE. ${marker}
	EOF

    fi

    # Check that all custom files are included
    for file in ${target_dir}/.Xresources.d/.Xresources* ; do
	if ! grep -q "${file}" "${target_dir}/.Xresources" ; then
	    echo "#include \"${file}\"" >> ${target_dir}/.Xresources
	fi
    done

    # Reloading X resources
    xrdb ${target_dir}/.Xresources
}

# 
# Checks all resources
#
checkAllResources() {
    checkProfile
    checkBashProfile
    checkXresources
}